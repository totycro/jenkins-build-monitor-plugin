<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout" xmlns:x="jelly:xml">

    <st:contentType value="text/html;charset=UTF-8"/>
    <st:setHeader name="Expires" value="0" />
    <st:setHeader name="Cache-Control" value="no-cache,no-store,must-revalidate" />

    <j:new var="h" className="hudson.Functions"/>
    ${h.initPageVariables(context)}

    <j:set var="isMSIE" value="${userAgent.contains('MSIE')}"/>
    <j:set var="resourcesURL" value="${resURL}/plugin/build-monitor-plugin" />
    <j:set var="jobsURL" value="${rootURL}/job" />
    <j:set var="angularVersion" value="1.5.8" />

    <x:doctype name="html" />
    <html>
        <head resURL="${resURL}">
            ${h.checkPermission(it,permission)}

            <title>${it.displayName}</title>

            <j:if test="${isMSIE}">
                <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
            </j:if>

            <link rel="shortcut icon" href="${resURL}/favicon.ico" type="image/vnd.microsoft.icon" />

            <j:set var="yuiSuffix" value="${h.yuiSuffix}" />
            <l:yui module="yahoo" />
            <l:yui module="cookie" />

            <st:adjunct assumes="org.kohsuke.stapler.framework.prototype.prototype"
                        includes="org.kohsuke.stapler.bind"/>

            <j:forEach var="pd" items="${h.pageDecorators}">
                <st:include it="${pd}" page="header.jelly" optional="true" />
            </j:forEach>

            <link rel="stylesheet" href="${resourcesURL}/styles/normalize.css"/>
            <link rel="stylesheet" href="${resourcesURL}/styles/bootstrap-combined.2.3.2.min.css"/>
            <link rel="stylesheet" href="${resourcesURL}/vendor/angular-slider-5.4.0/rzslider.min.css"/>

            <link rel="stylesheet" href="${resourcesURL}/themes/industrial.css"/>
            <link rel="stylesheet" href="${rootURL}/build-monitor-plugin/style.css"/>

            <script src="${resURL}/scripts/yui/cookie/cookie-min.js"></script>

            <script src="${resourcesURL}/vendor/angular-${angularVersion}/angular.min.js"></script>
            <script src="${resourcesURL}/vendor/angular-${angularVersion}/angular-sanitize.min.js"></script>
            <script src="${resourcesURL}/vendor/angular-${angularVersion}/angular-animate.min.js"></script>

            <script src="${resourcesURL}/vendor/modernizr.custom.27682.js"></script>
            <script src="${resourcesURL}/vendor/ng-lodash-3.10.1.min.js"></script>
            <script src="${resourcesURL}/vendor/ui-bootstrap-custom-tpls-0.4.0.js"></script>

            <script src="${resourcesURL}/vendor/angular-slugify-1.0.0.js"></script>

            <script src="${resourcesURL}/vendor/angular-slider-5.4.0/rzslider.min.js"></script>

            <j:if test="${it.collectAnonymousUsageStatistics()}">
                <script>
                    window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;

                    ga('create', 'UA-61694827-4', 'auto', {
                        'userId':     '${it.installation.anonymousCorrelationId()}',
                        'sampleRate': 1
                    });

                    ga('set', {
                        'forceSSL':       true,
                        'appName':        'Build Monitor',
                        'appId':          'build-monitor-plugin',

                        'appVersion':     '${it.installation.buildMonitorVersion()}',
                        'appInstallerId': '${h.version}',

                        'dimension1':     '${it.installation.size()}',
                        'dimension2':     '${it.items.size()}',
                        'dimension3':     '${it.installation.audience()}',
                        'dimension4':     '${it.installation.anonymousCorrelationId()}'
                    });

                    ga('send', 'screenview', {screenName: 'Dashboard'});
                </script>
                <script async="async" src='//www.google-analytics.com/analytics.js'></script>
            </j:if>
        </head>
        <body class="build-monitor dashboard industrial"
              data-ng-app="buildMonitor"
              data-ng-controller="JobViews"
              data-ng-class="{ 'colour-blind-mode': settings.colourBlind == 1, 'reduce-motion-mode': settings.reduceMotion == 1 }">

            <header>
                <a class="home-link" href="${rootURL}/" title="Jenkins">Jenkins</a>
                <h1><a href="configure" title="Configure the '${it.title}' view">${it.title}</a></h1>
                <st:include page="main-settings.jelly"/>
            </header>


            <main class="main ng-cloak">
                <st:include page="widgets.jelly" />
            </main>

            <footer>
                <div class="connectivity column">
                    <notifier />
                </div>
                <div class="version-info column">
                    <a href="https://github.com/jan-molak/jenkins-build-monitor-plugin"
                       title="Learn more about the Build Monitor project"
                       rel="external">Build Monitor</a>
                    version
                    <a href="https://github.com/jan-molak/jenkins-build-monitor-plugin/releases"
                       title="Is your Build Monitor up to date?"
                       rel="external">${it.installation.buildMonitorVersion()}</a>
                    brought to you by
                    <a href="https://bit.ly/JBMAbout"
                       title="Check out my articles on software development and delivery, training courses, talks and public events!"
                       rel="external">Jan Molak</a>
                </div>
            </footer>

            <script>
                /*
                 * todo: (13.08.2013) Replace the below workaround with a custom Jelly tag (ExposeBindTag)
                 *   extending either org.kohsuke.stapler.jelly.BindTag or AbstractStaplerTag,
                 *   that would supersede currently defective BindTag implementation:
                 *   - https://groups.google.com/forum/#!topic/jenkinsci-dev/S9bhX4ts0g4
                 *   - https://issues.jenkins-ci.org/browse/JENKINS-18641
                 *
                 *   Defect in BindTag manifests itself by causing a JavaScript error and preventing scripts after
                 *   the &lt;st:bind&gt; invocation from executing, which results in an "empty Build Monitor".
                 *   The issue occurs on Jenkins 1.521-1.526, only if the jQuery plugin is used.
                 *
                 * Motivation behind a custom Jelly tag:
                 *   Original implementation of the BindTag doesn't provide an easy way of handling AJAX errors,
                 *   which may happen if a network connection is lost or when Jenkins is restarted (which then makes
                 *   Stapler's binding hash obsolete and Jenkins return 404 for any subsequent requests).
                 *
                 *   Custom Jelly tag should generate a JSON object exposing the binding, leaving the implementation
                 *   of the proxy to the Developer. It makes more sense for a developer to require a binding adapter
                 *   implementation specific to their JavaScript framework of choice, rather than for Stapler to try
                 *   to predict what JavaScript libraries will ever be used with it in the future...
                 */
                window.originalMakeStaplerProxy = window.makeStaplerProxy;
                window.makeStaplerProxy = function(url, crumb, methods) {
                    return { url: url, crumb: crumb, methods: methods }
                };
                window.bindings={};
            </script>
            <st:bind var="window.bindings['buildMonitor']" value="${it}" />
            <script>
                window.makeStaplerProxy = window.originalMakeStaplerProxy;
                try {
                    delete window.originalMakeStaplerProxy;
                } catch(e) {
                    window["originalMakeStaplerProxy"] = undefined;
                }
            </script>

            <!-- todo: use require.js and bundle it all up -->
            <script src="${resourcesURL}/scripts/app.js"></script>
            <script src="${resourcesURL}/scripts/cron.js"></script>
            <script src="${resourcesURL}/scripts/filters.js"></script>
            <script src="${resourcesURL}/scripts/services.js"></script>
            <script src="${resourcesURL}/scripts/stats.js"></script>
            <script src="${resourcesURL}/scripts/jenkins.js"></script>
            <script src="${resourcesURL}/scripts/controllers.js"></script>
            <script src="${resourcesURL}/scripts/templates.js"></script>
            <script src="${resourcesURL}/scripts/settings.js"></script>
            <script src="${resourcesURL}/scripts/expansions/build-number.js"></script>
            <script src="${resourcesURL}/scripts/expansions/build-time.js"></script>
            <script src="${resourcesURL}/scripts/slot.js"></script>
            <script>
                'use strict';

                angular.

                    module('buildMonitor').

                    constant('BUILD_MONITOR_VERSION', '${it.installation.buildMonitorVersion()}').
                    constant('CSRF_CRUMB_FIELD_NAME', '${it.csrfCrumbFieldName}').

                    config(function(proxyProvider, cookieJarProvider, hashCodeProvider) {
                        var hashCodeOf = hashCodeProvider.hashCodeOf;

                        proxyProvider.configureProxiesUsing(window.bindings);

                        cookieJarProvider.describe({
                            label:     'buildMonitor.' + hashCodeOf('${it.displayName}'),
                            shelfLife: 365
                        });
                    });
            </script>
        </body>
    </html>
</j:jelly>
